{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,gBAGnC,EAAAJ,EAAAK,qBACCC,MAAK,SAAAC,GAQV,IAA8BC,EACpBC,EARFP,EAAQQ,UAAY,GACpBR,EAAQS,mBAAmB,aAMLH,EANuCD,EAAMK,KAAKC,QAOtEJ,EAASD,EACdM,KACG,SAAAC,G,IACEC,EAAWD,EAAXC,YACAC,EAAcF,EAAdE,eACAC,EAAaH,EAAbG,cACAC,EAASJ,EAATI,UACAC,EAAYL,EAAZK,aACAC,EAAcN,EAAdM,eACAC,EAAYP,EAAZO,aACAC,EAAER,EAAFQ,GAEQC,EAAWR,EACf,mCAA+CS,OAAZT,GACnC,GAAiBS,OAAdC,eAGDC,EAAO,IAAIC,KADJR,GAA8BC,GACfQ,cACtBC,EAAOb,GAAkCC,EACzCa,EAAOT,EAAeA,EAAaU,QAAQ,GAAK,MAYxD,MAAO,6CAIEP,OAHyBF,EAAG,4GAI3BE,OADDD,EAAS,sBAGgBC,OAFxBK,EAAK,mEAGiBL,OADEK,EAAK,iDACQL,OAAfN,EAAU,OACAM,OADKE,EAAK,0DACLF,OAALM,EAAK,0B,IAKhDE,KAAK,IAERC,QAAQC,IAAI1B,GACZP,EAAQS,mBAAmB,YAAaF,GACjCA,G,IAtDN2B,MAAM,Q","sources":["src/js/renderTrendingMovies.js"],"sourcesContent":["import { getTrendingMovies } from './fetchFilms'\n\nconst gallery = document.querySelector('.films_list')\n\nfunction buildTrendingsMovies(){\n    getTrendingMovies()\n    .then(films => {\n        gallery.innerHTML = ''\n        gallery.insertAdjacentHTML('beforeend', renderTrendingMovies(films.data.results))\n    })\n    .catch('error')\n\n    }\n\nfunction renderTrendingMovies(filmsList) {\n    const markup = filmsList\n    .map(\n        ({\n          poster_path,\n          original_title,\n          original_name,\n          genre_ids,\n          release_date,\n          first_air_date,\n          vote_average,\n          id,\n        }) => {\n            const imageUrl = poster_path\n            ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n            : `${defaultPoster}`;\n  \n          const date = release_date ? release_date : first_air_date;\n          const year = new Date(date).getFullYear();\n          const name = original_title ? original_title : original_name;\n          const vote = vote_average ? vote_average.toFixed(1) : 'N/A';\n  \n        /*   const genreArr = genres\n            ? genres.slice(0, 2).map(genre => genre.name)\n            : [];\n  \n          if (genres.length > 2 || genres.length === 0) {\n            genreArr.push('Others');\n          }\n  \n          const genreStr = genreArr.join(', '); */\n        \n        return `\n        <li class = \"film_card data-id=\"${id}\">\n        <div class=\"film_card__img\">\n           <img class=\"film_card__img--block\"\n           src=${imageUrl}\n           alt=\"${name}\">\n           </div>\n           <h3 class=\"film_card__title\">${name}</h3>\n           <p class=\"film_card__type\">${genre_ids} | ${year}</p>\n           <p class=\"film_card__rating\">Rating: ${vote}</p>\n     </li>\n     `\n      }\n      )\n      .join('')\n    \n    console.log(markup)\n    gallery.insertAdjacentHTML('beforeend', markup)\n    return markup\n  }\n\n  buildTrendingsMovies()"],"names":["$7qhbT","parcelRequire","$b579595b306b4ff2$var$gallery","document","querySelector","getTrendingMovies","then","films","filmsList","markup","innerHTML","insertAdjacentHTML","data","results","map","param","poster_path","original_title","original_name","genre_ids","release_date","first_air_date","vote_average","id","imageUrl","concat","defaultPoster","year","Date","getFullYear","name","vote","toFixed","join","console","log","catch"],"version":3,"file":"index.abb37534.js.map"}