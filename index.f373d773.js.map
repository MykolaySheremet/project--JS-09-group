{"mappings":"oeAAAA,EAAA,S,4BASAC,QAAQC,IAAIC,EAAAC,iBAEZ,MAAMC,EAAYC,SAASC,cAAc,kBAEnCC,GADUF,SAASC,cAAc,mBACvBD,SAASC,cAAc,gBASvCF,EAAUI,iBAAiB,SAI3B,WACI,IAAIC,EAAqBC,aAAaC,QAAQ,gBAC9C,GAAIF,EAAmBG,OAAS,EAAG,CAC/BL,EAAQM,UAAY,GACpB,MAAMC,EAAqBC,KAAKC,MAAMP,GACtCT,QAAQC,IAAIa,GAGZ,IAAK,MAAMG,KAAKH,EAAoB,EAEjB,EAAAZ,EAAAC,iBAAgBc,GACxBC,MACHC,IACI,MAAMC,EAAWD,EAAOE,KAAKC,YACnC,mCAAmCH,EAAOE,KAAKC,cAC/C,GAAGH,EAAOE,KAAKE,gBACHC,EAAc,kDACOP,+GAG9BG,sBACCD,EAAOE,KAAKI,gFAEYN,EAAOE,KAAKI,0HAEJN,EAAOE,KAAKK,kDAG1CnB,EAAQoB,mBAAmB,YAAaH,GAGxCxB,QAAQC,IAAIkB,EAAOE,KAAKC,aACxBtB,QAAQC,IAAIkB,EAAOE,KAAKI,gBAIxBzB,QAAQC,IAAIkB,EAAOE,KAAKK,cACxB1B,QAAQC,IAAIkB,EAAOE,KAAKO,aAAa,IAKjCC,GAAS7B,QAAQC,IAAI4B,KAGzB7B,QAAQC,IAAI,Q","sources":["src/js/library-wached-quee-film.js"],"sourcesContent":["import { checkContains } from \"./libraries\"\n\nimport axios from \"axios\"\n\nconst KEY = '2acc48bc8101b89794229029120e4b70'\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nimport { getMovieDetails } from \"./fetchFilms\"\n\nconsole.log(getMovieDetails);\n\nconst btnWached = document.querySelector('.library-first')\nconst btnQuue = document.querySelector('.library-second')\nconst gallery = document.querySelector('.films_list')\n\n\n\n// console.log(localStorageWached)\n\n// console.log(localStorageWached.length);\n\n\nbtnWached.addEventListener('click', rendercards);\n\n\n\nfunction rendercards() {\n    let localStorageWached = localStorage.getItem('watchedFilms')\n    if (localStorageWached.length > 0) {\n        gallery.innerHTML = '';\n        const arrayLocalWachFilm = JSON.parse(localStorageWached)\n        console.log(arrayLocalWachFilm);\n\n\n        for (const i of arrayLocalWachFilm) {\n           \n            const promis = getMovieDetails(i);\n            promis.then(\n                result => { \n                    const imageUrl = result.data.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${result.data.poster_path}`\n            : `${result.data.defaultPoster}`;\n                    const cardwachfil = `\n            <li class = \"film_card\" data-id=\"${i}\">\n           <div class=\"film_card__img\">\n           <img class=\"film_card__img--block\"\n           src=${imageUrl}\n           alt=\"${result.data.original_title}\">\n           </div>\n           <h3 class=\"film_card__title\">${result.data.original_title}</h3>\n           <p class=\"film_card__type\">Привет</p>\n           <p class=\"film_card__rating\">Rating: ${result.data.vote_average}</p>\n           </li>\n           `\n                    gallery.insertAdjacentHTML('beforeend', cardwachfil)\n                    \n                    // console.log(result.data)\n                    console.log(result.data.poster_path)\n                    console.log(result.data.original_title)\n                    // console.log(result.data.original_name)\n                    // console.log(result.data.genre_ids)\n                    // console.log(result.data.first_air_date)\n                    console.log(result.data.vote_average)\n                    console.log(result.data.release_date)\n                \n\n                },\n               \n                        error => console.log(error)\n  );\n \n                    console.log('works')\n                } \n            }\n        }\n    \n\n           \n                \n          \n\n\n// function checklocalstorage(localStorageWached) {\n\n//     console.log(JSON.stringify(localStorageWached))\n//     console.log('no idea')\n\n    \n// }\n\n\n\n\n// console.log(localStorageWached);\n\n\n\n// let dataFilmsByWatched = [];\n// let dataFilmsByQueue = [];\n\n// console.log(getFromStorage)\n\n\n// const save = (queueFilms, value) => {\n//   try {\n//     const serializedState = JSON.stringify(value);\n//     localStorage.setItem(queueFilms, serializedState);\n//   } catch (error) {\n//     console.error(\"Set state error: \", error.message);\n//   }\n// };\n\n// console.log()\n\n\n\n\n// const load = key => {\n//   try {\n//     const serializedState = localStorage.getItem(key);\n//     return serializedState === null ? undefined : JSON.parse(serializedState);\n//   } catch (error) {\n//     console.error(\"Get state error: \", error.message);\n//   }\n// };\n\n\n// const checkLocalStorege = () => {\n//   if (getFromStorage('dataFilmsByWatched')) {\n//     dataFilmsByWatched = getFromStorage('dataFilmsByWatched');\n//     }\n    \n\n\n//   if (getFromStorage('dataFilmsByQueue')) {\n//     dataFilmsByQueue = getFromStorage('dataFilmsByQueue');\n//   }\n// };"],"names":["parcelRequire","console","log","$7lzvS","getMovieDetails","$d3ee630f3b19a388$var$btnWached","document","querySelector","$d3ee630f3b19a388$var$gallery","addEventListener","localStorageWached","localStorage","getItem","length","innerHTML","arrayLocalWachFilm","JSON","parse","i","then","result","imageUrl","data","poster_path","defaultPoster","cardwachfil","original_title","vote_average","insertAdjacentHTML","release_date","error"],"version":3,"file":"index.f373d773.js.map"}